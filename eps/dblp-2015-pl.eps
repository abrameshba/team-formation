%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./eps/dblp-2015-pl.eps
%%Creator: gnuplot 5.4 patchlevel 1
%%CreationDate: Thu Jul 15 18:28:37 2021
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./eps/dblp-2015-pl.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.4 patchlevel 1)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Jul 15 18:28:37 2021)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Arial-Bold) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
854 448 M
31 0 V
6062 0 R
-31 0 V
854 527 M
31 0 V
6062 0 R
-31 0 V
854 593 M
31 0 V
6062 0 R
-31 0 V
854 651 M
31 0 V
6062 0 R
-31 0 V
854 702 M
31 0 V
6062 0 R
-31 0 V
854 747 M
63 0 V
6030 0 R
-63 0 V
stroke
770 747 M
[ [(Arial-Bold) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
/Arial-Bold findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
LCb setrgbcolor
854 1046 M
31 0 V
6062 0 R
-31 0 V
854 1221 M
31 0 V
6062 0 R
-31 0 V
854 1345 M
31 0 V
6062 0 R
-31 0 V
854 1442 M
31 0 V
6062 0 R
-31 0 V
854 1520 M
31 0 V
6062 0 R
-31 0 V
854 1587 M
31 0 V
6062 0 R
-31 0 V
854 1644 M
31 0 V
6062 0 R
-31 0 V
854 1695 M
31 0 V
6062 0 R
-31 0 V
854 1741 M
63 0 V
6030 0 R
-63 0 V
stroke
770 1741 M
[ [(Arial-Bold) 140.0 0.0 true true 0 ( 10)]
] -46.7 MRshow
/Arial-Bold findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
854 2040 M
31 0 V
6062 0 R
-31 0 V
854 2215 M
31 0 V
6062 0 R
-31 0 V
854 2339 M
31 0 V
6062 0 R
-31 0 V
854 2435 M
31 0 V
6062 0 R
-31 0 V
854 2514 M
31 0 V
6062 0 R
-31 0 V
854 2580 M
31 0 V
6062 0 R
-31 0 V
854 2638 M
31 0 V
6062 0 R
-31 0 V
854 2689 M
31 0 V
6062 0 R
-31 0 V
854 2734 M
63 0 V
6030 0 R
-63 0 V
stroke
770 2734 M
[ [(Arial-Bold) 140.0 0.0 true true 0 ( 100)]
] -46.7 MRshow
/Arial-Bold findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
854 3033 M
31 0 V
6062 0 R
-31 0 V
854 3208 M
31 0 V
6062 0 R
-31 0 V
854 3332 M
31 0 V
6062 0 R
-31 0 V
854 3429 M
31 0 V
6062 0 R
-31 0 V
854 3507 M
31 0 V
6062 0 R
-31 0 V
854 3574 M
31 0 V
6062 0 R
-31 0 V
854 3631 M
31 0 V
6062 0 R
-31 0 V
854 3682 M
31 0 V
6062 0 R
-31 0 V
854 3728 M
63 0 V
6030 0 R
-63 0 V
stroke
770 3728 M
[ [(Arial-Bold) 140.0 0.0 true true 0 ( 1000)]
] -46.7 MRshow
/Arial-Bold findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
854 4027 M
31 0 V
6062 0 R
-31 0 V
854 4202 M
31 0 V
6062 0 R
-31 0 V
854 4326 M
31 0 V
6062 0 R
-31 0 V
854 4422 M
31 0 V
6062 0 R
-31 0 V
854 4501 M
31 0 V
6062 0 R
-31 0 V
854 4567 M
31 0 V
6062 0 R
-31 0 V
854 4625 M
31 0 V
6062 0 R
-31 0 V
854 4676 M
31 0 V
6062 0 R
-31 0 V
854 4721 M
63 0 V
6030 0 R
-63 0 V
stroke
770 4721 M
[ [(Arial-Bold) 140.0 0.0 true true 0 ( 10000)]
] -46.7 MRshow
/Arial-Bold findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
854 448 M
0 31 V
0 4420 R
0 -31 V
1007 448 M
0 31 V
0 4420 R
0 -31 V
1137 448 M
0 31 V
0 4420 R
0 -31 V
1249 448 M
0 31 V
0 4420 R
0 -31 V
1348 448 M
0 31 V
0 4420 R
0 -31 V
1437 448 M
0 63 V
0 4388 R
0 -63 V
stroke
1437 308 M
[ [(Arial-Bold) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
/Arial-Bold findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2020 448 M
0 31 V
0 4420 R
0 -31 V
2360 448 M
0 31 V
0 4420 R
0 -31 V
2602 448 M
0 31 V
0 4420 R
0 -31 V
2790 448 M
0 31 V
0 4420 R
0 -31 V
2943 448 M
0 31 V
0 4420 R
0 -31 V
3073 448 M
0 31 V
0 4420 R
0 -31 V
3185 448 M
0 31 V
0 4420 R
0 -31 V
3284 448 M
0 31 V
0 4420 R
0 -31 V
3373 448 M
0 63 V
0 4388 R
0 -63 V
stroke
3373 308 M
[ [(Arial-Bold) 140.0 0.0 true true 0 ( 10)]
] -46.7 MCshow
/Arial-Bold findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3955 448 M
0 31 V
0 4420 R
0 -31 V
4296 448 M
0 31 V
0 4420 R
0 -31 V
4538 448 M
0 31 V
0 4420 R
0 -31 V
4726 448 M
0 31 V
0 4420 R
0 -31 V
4879 448 M
0 31 V
0 4420 R
0 -31 V
5009 448 M
0 31 V
0 4420 R
0 -31 V
5121 448 M
0 31 V
0 4420 R
0 -31 V
5220 448 M
0 31 V
0 4420 R
0 -31 V
5309 448 M
0 63 V
0 4388 R
0 -63 V
stroke
5309 308 M
[ [(Arial-Bold) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
/Arial-Bold findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5891 448 M
0 31 V
0 4420 R
0 -31 V
6232 448 M
0 31 V
0 4420 R
0 -31 V
6474 448 M
0 31 V
0 4420 R
0 -31 V
6662 448 M
0 31 V
0 4420 R
0 -31 V
6815 448 M
0 31 V
0 4420 R
0 -31 V
6945 448 M
0 31 V
0 4420 R
0 -31 V
stroke
LTB
LCb setrgbcolor
854 4899 N
854 448 L
6093 0 V
0 4451 V
-6093 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
133 2673 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Arial-Bold) 140.0 0.0 true true 0 (Number of experts)]
] -46.7 MCshow
grestore
/Arial-Bold findfont 140 scalefont setfont
LTb
LCb setrgbcolor
3900 98 M
[ [(Arial-Bold) 140.0 0.0 true true 0 (Degree of experts)]
] -46.7 MCshow
/Arial-Bold findfont 140 scalefont setfont
LTb
% Begin plot #1
2.000 UP
1.000 UL
LTb
0.00 1.00 0.00 C
LCb setrgbcolor
6296 4766 M
[ [(Arial-Bold) 140.0 0.0 true true 0 (high degree experts)]
] -46.7 MRshow
/Arial-Bold findfont 140 scalefont setfont
2.000 UP
1.000 UL
LTb
0.00 1.00 0.00 C
6364 747 Dia
6257 747 Dia
6249 747 Dia
5866 747 Dia
5848 747 Dia
5839 747 Dia
5835 747 Dia
5826 747 Dia
5817 1046 Dia
5793 747 Dia
5740 747 Dia
5735 747 Dia
5709 747 Dia
5704 747 Dia
5682 747 Dia
5677 747 Dia
5666 747 Dia
5655 1046 Dia
5649 1046 Dia
5644 747 Dia
5638 747 Dia
5632 747 Dia
5621 747 Dia
5615 747 Dia
5591 747 Dia
5585 747 Dia
5579 747 Dia
5567 747 Dia
5542 747 Dia
5529 1046 Dia
5523 747 Dia
5516 1046 Dia
5489 747 Dia
5476 1046 Dia
5469 747 Dia
5455 1046 Dia
5448 747 Dia
5433 747 Dia
5426 1046 Dia
5419 1046 Dia
5411 747 Dia
5396 1046 Dia
5389 747 Dia
5381 1221 Dia
5373 747 Dia
5358 1046 Dia
5350 747 Dia
5342 1345 Dia
5333 747 Dia
5325 1221 Dia
5317 1046 Dia
5309 1046 Dia
5300 747 Dia
5292 1046 Dia
5283 1046 Dia
5274 1345 Dia
5265 1046 Dia
5257 1221 Dia
5248 1345 Dia
5238 1221 Dia
5229 1345 Dia
5220 1221 Dia
5211 1046 Dia
5201 1442 Dia
5191 1046 Dia
5182 1221 Dia
5172 1345 Dia
5162 1345 Dia
5152 1345 Dia
5142 1520 Dia
5131 1046 Dia
5121 1442 Dia
5110 1520 Dia
5100 1442 Dia
5089 1782 Dia
5078 1221 Dia
5067 1442 Dia
5055 1046 Dia
5044 1520 Dia
5032 1741 Dia
5021 1587 Dia
5009 1520 Dia
4997 1520 Dia
4984 1782 Dia
4972 1782 Dia
4959 1520 Dia
4946 1644 Dia
4933 1741 Dia
4920 1695 Dia
4907 1644 Dia
4893 1587 Dia
4879 1520 Dia
4865 1782 Dia
4851 1970 Dia
4836 2136 Dia
4821 1943 Dia
4806 2081 Dia
4791 2081 Dia
4775 1994 Dia
4759 2081 Dia
4742 2018 Dia
4726 2229 Dia
4709 1994 Dia
4691 1994 Dia
4674 2339 Dia
4656 2215 Dia
4637 2061 Dia
4618 2169 Dia
4599 2408 Dia
4579 2229 Dia
4559 2293 Dia
4538 2360 Dia
4517 2269 Dia
4495 2215 Dia
4473 2521 Dia
4450 2499 Dia
4426 2580 Dia
4402 2598 Dia
4376 2610 Dia
4351 2476 Dia
4324 2755 Dia
4296 2627 Dia
4268 2708 Dia
4238 2726 Dia
4208 2861 Dia
4176 2827 Dia
4143 2841 Dia
4109 2948 Dia
4073 2958 Dia
4036 2857 Dia
3996 3029 Dia
3955 3116 Dia
3912 3095 Dia
3867 3177 Dia
3819 3278 Dia
3768 3293 Dia
3714 3353 Dia
6579 4766 Dia
% End plot #1
% Begin plot #2
2.000 UP
1.000 UL
LTb
1.00 0.00 0.00 C
LCb setrgbcolor
6296 4626 M
[ [(Arial-Bold) 140.0 0.0 true true 0 (low degree experts)]
] -46.7 MRshow
/Arial-Bold findfont 140 scalefont setfont
2.000 UP
1.000 UL
LTb
1.00 0.00 0.00 C
3656 3459 Circle
3593 3495 Circle
3526 3559 Circle
3453 3664 Circle
3373 3731 Circle
3284 3823 Circle
3185 3921 Circle
3073 4053 Circle
2943 4150 Circle
2790 4312 Circle
2602 4460 Circle
2360 4599 Circle
2020 4600 Circle
1437 4366 Circle
6579 4626 Circle
% End plot #2
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
854 4899 N
854 448 L
6093 0 V
0 4451 V
-6093 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Arial-Bold
