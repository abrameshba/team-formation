%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./eps/vldb-rand-170-processing-time.eps
%%Creator: gnuplot 5.4 patchlevel 1
%%CreationDate: Tue Jul 20 13:19:36 2021
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./eps/vldb-rand-170-processing-time.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.4 patchlevel 1)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Jul 20 13:19:36 2021)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
938 448 M
31 0 V
5978 0 R
-31 0 V
938 477 M
63 0 V
5946 0 R
-63 0 V
stroke
854 477 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
LCb setrgbcolor
938 672 M
31 0 V
5978 0 R
-31 0 V
938 785 M
31 0 V
5978 0 R
-31 0 V
938 866 M
31 0 V
5978 0 R
-31 0 V
938 928 M
31 0 V
5978 0 R
-31 0 V
938 979 M
31 0 V
5978 0 R
-31 0 V
938 1022 M
31 0 V
5978 0 R
-31 0 V
938 1060 M
31 0 V
5978 0 R
-31 0 V
938 1093 M
31 0 V
5978 0 R
-31 0 V
938 1122 M
63 0 V
5946 0 R
-63 0 V
stroke
854 1122 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
938 1316 M
31 0 V
5978 0 R
-31 0 V
938 1430 M
31 0 V
5978 0 R
-31 0 V
938 1510 M
31 0 V
5978 0 R
-31 0 V
938 1573 M
31 0 V
5978 0 R
-31 0 V
938 1624 M
31 0 V
5978 0 R
-31 0 V
938 1667 M
31 0 V
5978 0 R
-31 0 V
938 1704 M
31 0 V
5978 0 R
-31 0 V
938 1737 M
31 0 V
5978 0 R
-31 0 V
938 1767 M
63 0 V
5946 0 R
-63 0 V
stroke
854 1767 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
938 1961 M
31 0 V
5978 0 R
-31 0 V
938 2074 M
31 0 V
5978 0 R
-31 0 V
938 2155 M
31 0 V
5978 0 R
-31 0 V
938 2217 M
31 0 V
5978 0 R
-31 0 V
938 2268 M
31 0 V
5978 0 R
-31 0 V
938 2311 M
31 0 V
5978 0 R
-31 0 V
938 2349 M
31 0 V
5978 0 R
-31 0 V
938 2382 M
31 0 V
5978 0 R
-31 0 V
938 2411 M
63 0 V
5946 0 R
-63 0 V
stroke
854 2411 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
938 2605 M
31 0 V
5978 0 R
-31 0 V
938 2719 M
31 0 V
5978 0 R
-31 0 V
938 2799 M
31 0 V
5978 0 R
-31 0 V
938 2862 M
31 0 V
5978 0 R
-31 0 V
938 2913 M
31 0 V
5978 0 R
-31 0 V
938 2956 M
31 0 V
5978 0 R
-31 0 V
938 2993 M
31 0 V
5978 0 R
-31 0 V
938 3026 M
31 0 V
5978 0 R
-31 0 V
938 3056 M
63 0 V
5946 0 R
-63 0 V
stroke
854 3056 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1000)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
938 3250 M
31 0 V
5978 0 R
-31 0 V
938 3363 M
31 0 V
5978 0 R
-31 0 V
938 3444 M
31 0 V
5978 0 R
-31 0 V
938 3506 M
31 0 V
5978 0 R
-31 0 V
938 3558 M
31 0 V
5978 0 R
-31 0 V
938 3601 M
31 0 V
5978 0 R
-31 0 V
938 3638 M
31 0 V
5978 0 R
-31 0 V
938 3671 M
31 0 V
5978 0 R
-31 0 V
938 3701 M
63 0 V
5946 0 R
-63 0 V
stroke
854 3701 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10000)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
938 3895 M
31 0 V
5978 0 R
-31 0 V
938 4008 M
31 0 V
5978 0 R
-31 0 V
938 4089 M
31 0 V
5978 0 R
-31 0 V
938 4151 M
31 0 V
5978 0 R
-31 0 V
938 4202 M
31 0 V
5978 0 R
-31 0 V
938 4245 M
31 0 V
5978 0 R
-31 0 V
938 4283 M
31 0 V
5978 0 R
-31 0 V
938 4316 M
31 0 V
5978 0 R
-31 0 V
938 4345 M
63 0 V
5946 0 R
-63 0 V
stroke
854 4345 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100000)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
938 4539 M
31 0 V
5978 0 R
-31 0 V
938 4653 M
31 0 V
5978 0 R
-31 0 V
938 4733 M
31 0 V
5978 0 R
-31 0 V
938 4796 M
31 0 V
5978 0 R
-31 0 V
938 4847 M
31 0 V
5978 0 R
-31 0 V
938 4890 M
31 0 V
5978 0 R
-31 0 V
1272 448 M
0 63 V
0 4388 R
0 -63 V
stroke
1272 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1940 448 M
0 63 V
0 4388 R
0 -63 V
stroke
1940 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 6)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2607 448 M
0 63 V
0 4388 R
0 -63 V
stroke
2607 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 8)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3275 448 M
0 63 V
0 4388 R
0 -63 V
stroke
3275 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3943 448 M
0 63 V
0 4388 R
0 -63 V
stroke
3943 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 12)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4610 448 M
0 63 V
0 4388 R
0 -63 V
stroke
4610 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 14)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5278 448 M
0 63 V
0 4388 R
0 -63 V
stroke
5278 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 16)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5946 448 M
0 63 V
0 4388 R
0 -63 V
stroke
5946 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 18)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6613 448 M
0 63 V
0 4388 R
0 -63 V
stroke
6613 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
938 4899 N
938 448 L
6009 0 V
0 4451 V
-6009 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
133 2673 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Processing time \(sec\))]
] -46.7 MCshow
grestore
/Helvetica findfont 140 scalefont setfont
LTb
LCb setrgbcolor
3942 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Task Size |T|)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
LTb
1.000 UL
LTb
LCb setrgbcolor
1022 3856 N
0 980 V
1575 0 V
0 -980 V
-1575 0 V
Z stroke
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C
LCb setrgbcolor
1022 4766 M
[ [(Helvetica) 140.0 0.0 true true 0 (MinDiamSol)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C
2114 4766 M
399 0 V
1272 2662 M
334 14 V
334 55 V
333 -9 V
334 -17 V
334 -29 V
334 -1 V
334 5 V
334 8 V
333 -10 V
334 -1 V
334 3 V
334 -5 V
334 16 V
334 -14 V
333 -6 V
334 13 V
1272 2662 Pls
1606 2676 Pls
1940 2731 Pls
2273 2722 Pls
2607 2705 Pls
2941 2676 Pls
3275 2675 Pls
3609 2680 Pls
3943 2688 Pls
4276 2678 Pls
4610 2677 Pls
4944 2680 Pls
5278 2675 Pls
5612 2691 Pls
5946 2677 Pls
6279 2671 Pls
6613 2684 Pls
2313 4766 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LTb
0.00 0.62 0.45 C
LCb setrgbcolor
1022 4626 M
[ [(Helvetica) 140.0 0.0 true true 0 (MinLD)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UP
1.000 UL
LTb
0.00 0.62 0.45 C
2114 4626 M
399 0 V
1272 3179 M
334 13 V
334 78 V
333 44 V
334 20 V
334 111 V
334 10 V
334 -28 V
334 33 V
333 71 V
334 -71 V
334 83 V
334 48 V
334 -66 V
334 -28 V
333 74 V
334 39 V
1272 3179 Crs
1606 3192 Crs
1940 3270 Crs
2273 3314 Crs
2607 3334 Crs
2941 3445 Crs
3275 3455 Crs
3609 3427 Crs
3943 3460 Crs
4276 3531 Crs
4610 3460 Crs
4944 3543 Crs
5278 3591 Crs
5612 3525 Crs
5946 3497 Crs
6279 3571 Crs
6613 3610 Crs
2313 4626 Crs
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LTb
0.34 0.71 0.91 C
LCb setrgbcolor
1022 4486 M
[ [(Helvetica) 140.0 0.0 true true 0 (MinSD)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UP
1.000 UL
LTb
0.34 0.71 0.91 C
2114 4486 M
399 0 V
1272 2190 M
334 107 V
334 169 V
333 132 V
334 121 V
334 262 V
334 -92 V
334 57 V
334 30 V
333 140 V
334 -142 V
334 139 V
334 116 V
334 -46 V
334 -58 V
333 119 V
334 56 V
1272 2190 Star
1606 2297 Star
1940 2466 Star
2273 2598 Star
2607 2719 Star
2941 2981 Star
3275 2889 Star
3609 2946 Star
3943 2976 Star
4276 3116 Star
4610 2974 Star
4944 3113 Star
5278 3229 Star
5612 3183 Star
5946 3125 Star
6279 3244 Star
6613 3300 Star
2313 4486 Star
% End plot #3
% Begin plot #4
1.000 UP
1.000 UL
LTb
0.90 0.62 0.00 C
LCb setrgbcolor
1022 4346 M
[ [(Helvetica) 140.0 0.0 true true 0 (Rarestfirst)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UP
1.000 UL
LTb
0.90 0.62 0.00 C
2114 4346 M
399 0 V
1272 1348 M
334 22 V
334 167 V
333 -69 V
334 -7 V
334 232 V
334 -31 V
334 -19 V
334 -3 V
333 88 V
334 -85 V
334 57 V
334 80 V
334 -60 V
334 -15 V
333 84 V
334 9 V
1272 1348 Box
1606 1370 Box
1940 1537 Box
2273 1468 Box
2607 1461 Box
2941 1693 Box
3275 1662 Box
3609 1643 Box
3943 1640 Box
4276 1728 Box
4610 1643 Box
4944 1700 Box
5278 1780 Box
5612 1720 Box
5946 1705 Box
6279 1789 Box
6613 1798 Box
2313 4346 Box
% End plot #4
% Begin plot #5
1.000 UP
1.000 UL
LTb
0.94 0.89 0.26 C
LCb setrgbcolor
1022 4206 M
[ [(Helvetica) 140.0 0.0 true true 0 (TPLClosest-1)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UP
1.000 UL
LTb
0.94 0.89 0.26 C
2114 4206 M
399 0 V
1272 1629 M
334 179 V
334 120 V
333 141 V
334 32 V
334 272 V
334 -120 V
334 47 V
334 55 V
333 87 V
334 -105 V
334 105 V
334 79 V
334 -70 V
334 -94 V
333 130 V
334 30 V
1272 1629 BoxF
1606 1808 BoxF
1940 1928 BoxF
2273 2069 BoxF
2607 2101 BoxF
2941 2373 BoxF
3275 2253 BoxF
3609 2300 BoxF
3943 2355 BoxF
4276 2442 BoxF
4610 2337 BoxF
4944 2442 BoxF
5278 2521 BoxF
5612 2451 BoxF
5946 2357 BoxF
6279 2487 BoxF
6613 2517 BoxF
2313 4206 BoxF
% End plot #5
% Begin plot #6
1.000 UP
1.000 UL
LTb
0.00 0.45 0.70 C
LCb setrgbcolor
1022 4066 M
[ [(Helvetica) 140.0 0.0 true true 0 (TPLClosest-2)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UP
1.000 UL
LTb
0.00 0.45 0.70 C
2114 4066 M
399 0 V
1272 1328 M
334 200 V
334 130 V
333 137 V
334 -58 V
334 196 V
334 -23 V
334 4 V
334 127 V
333 -4 V
334 -46 V
334 130 V
334 80 V
334 -79 V
334 -21 V
333 98 V
334 29 V
1272 1328 Circle
1606 1528 Circle
1940 1658 Circle
2273 1795 Circle
2607 1737 Circle
2941 1933 Circle
3275 1910 Circle
3609 1914 Circle
3943 2041 Circle
4276 2037 Circle
4610 1991 Circle
4944 2121 Circle
5278 2201 Circle
5612 2122 Circle
5946 2101 Circle
6279 2199 Circle
6613 2228 Circle
2313 4066 Circle
% End plot #6
% Begin plot #7
1.000 UP
1.000 UL
LTb
0.90 0.12 0.06 C
LCb setrgbcolor
1022 3926 M
[ [(Helvetica) 140.0 0.0 true true 0 (TPLRandom)]
] -46.7 MLshow
/Helvetica findfont 140 scalefont setfont
1.000 UP
1.000 UL
LTb
0.90 0.12 0.06 C
2114 3926 M
399 0 V
1272 642 M
334 160 V
334 112 V
333 98 V
334 -21 V
334 148 V
334 107 V
334 -6 V
334 135 V
333 -7 V
334 -20 V
334 78 V
334 61 V
334 -49 V
334 -20 V
333 127 V
334 82 V
1272 642 CircleF
1606 802 CircleF
1940 914 CircleF
2273 1012 CircleF
2607 991 CircleF
2941 1139 CircleF
3275 1246 CircleF
3609 1240 CircleF
3943 1375 CircleF
4276 1368 CircleF
4610 1348 CircleF
4944 1426 CircleF
5278 1487 CircleF
5612 1438 CircleF
5946 1418 CircleF
6279 1545 CircleF
6613 1627 CircleF
2313 3926 CircleF
% End plot #7
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
938 4899 N
938 448 L
6009 0 V
0 4451 V
-6009 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
